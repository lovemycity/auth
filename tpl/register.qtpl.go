// Code generated by qtc from "register.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line tpl/register.qtpl:1
package tpl

//line tpl/register.qtpl:1
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line tpl/register.qtpl:1
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line tpl/register.qtpl:2
type RegisterPage struct {
	BasePage
}

//line tpl/register.qtpl:7
func (p *RegisterPage) StreamTitle(qw422016 *qt422016.Writer) {
//line tpl/register.qtpl:7
	qw422016.N().S(`
	Регистрация
`)
//line tpl/register.qtpl:9
}

//line tpl/register.qtpl:9
func (p *RegisterPage) WriteTitle(qq422016 qtio422016.Writer) {
//line tpl/register.qtpl:9
	qw422016 := qt422016.AcquireWriter(qq422016)
//line tpl/register.qtpl:9
	p.StreamTitle(qw422016)
//line tpl/register.qtpl:9
	qt422016.ReleaseWriter(qw422016)
//line tpl/register.qtpl:9
}

//line tpl/register.qtpl:9
func (p *RegisterPage) Title() string {
//line tpl/register.qtpl:9
	qb422016 := qt422016.AcquireByteBuffer()
//line tpl/register.qtpl:9
	p.WriteTitle(qb422016)
//line tpl/register.qtpl:9
	qs422016 := string(qb422016.B)
//line tpl/register.qtpl:9
	qt422016.ReleaseByteBuffer(qb422016)
//line tpl/register.qtpl:9
	return qs422016
//line tpl/register.qtpl:9
}

//line tpl/register.qtpl:11
func (p *RegisterPage) StreamBody(qw422016 *qt422016.Writer) {
//line tpl/register.qtpl:11
	qw422016.N().S(`
	<h1>Регистрация</h1>
	<div>
		<form id="form">
            <div>
                <label for="gender">Как к вам обращаться?</label>
                <select id="gender">
                    <option value="f">Уважаемая</option>
                    <option value="m">Уважаемый</option>
                </select>
            </div>
            <div>
                <label for="last_name">Фамилия:</label>
                <input type="text" id="last_name" required/>
            </div>
            <div>
                <label for="first_name">Имя:</label>
                <input type="text" id="first_name" required/>
            </div>
            <div>
                <label for="middle_name">Отчество:</label>
                <input type="text" id="middle_name"/>
            </div>
            <div>
                <label for="email">E-Mail:</label>
                <input type="email" id="email" required/>
            </div>
            <div>
                <label for="password">Пароль:</label>
                <input type="password" id="password" required minlength="8"/>
            </div>
            <div>
                <label for="confirm_password">Пароль еще раз:</label>
                <input type="password" id="confirm_password" required minlength="8"/>
            </div>
            <div>
                <button type="submit" id="submit_button">Зарегестрироваться!</button>
            </div>
		</form>
	</div>
`)
//line tpl/register.qtpl:51
}

//line tpl/register.qtpl:51
func (p *RegisterPage) WriteBody(qq422016 qtio422016.Writer) {
//line tpl/register.qtpl:51
	qw422016 := qt422016.AcquireWriter(qq422016)
//line tpl/register.qtpl:51
	p.StreamBody(qw422016)
//line tpl/register.qtpl:51
	qt422016.ReleaseWriter(qw422016)
//line tpl/register.qtpl:51
}

//line tpl/register.qtpl:51
func (p *RegisterPage) Body() string {
//line tpl/register.qtpl:51
	qb422016 := qt422016.AcquireByteBuffer()
//line tpl/register.qtpl:51
	p.WriteBody(qb422016)
//line tpl/register.qtpl:51
	qs422016 := string(qb422016.B)
//line tpl/register.qtpl:51
	qt422016.ReleaseByteBuffer(qb422016)
//line tpl/register.qtpl:51
	return qs422016
//line tpl/register.qtpl:51
}

//line tpl/register.qtpl:53
func (p *RegisterPage) StreamJS(qw422016 *qt422016.Writer) {
//line tpl/register.qtpl:53
	qw422016.N().S(`
<script>`)
//line tpl/register.qtpl:54
	qw422016.N().S(`(() => {
    const
        gid = id => document.getElementById(id),
        f = {
            gender: gid('gender'),
            last_name: gid('last_name'),
            first_name: gid('first_name'),
            middle_name: gid('middle_name'),
            email: gid('email'),
            password: gid('password'),
            confirm_password: gid('confirm_password'),
            submit_button: gid('submit_button'),
        };

    const filter = (v) => ![
        'submit_button',
        'confirm_password'
    ].includes(v);

    const getValues = () => Object
        .keys(f)
        .filter(filter)
        .reduce((obj, v) => {
            obj[v] = f[v].value;
            return obj;
        }, Object.create(null));

    const setDisabled = (disabled) => {
        Object
            .keys(f)
            .forEach(v => {
                f[v].disabled = disabled;
            });
    };

    const validate = () => {
        if (f.password.value !== f.confirm_password.value) {
            f.confirm_password.setCustomValidity('Пароли не совпадают');
            return false;
        }
        f.confirm_password.setCustomValidity('');
        return true;
    };

    gid('form').addEventListener('submit', async (event) => {
        event.preventDefault();
        if (!validate()) {
            return;
        }
        setDisabled(true);
        try {
            const res = await fetch('/api/register', {
                method: 'POST',
                credentials: 'include',
                headers: {
                    'content-type': 'application/json',
                },
                body: JSON.stringify(getValues()),
            });
            const json = await res.json();
            if (res.status !== 200) {

                return;
            }
            redirect();
        } catch (err) {
            console.error(err);
        }
        // setDisabled(false);
        console.log(getValues());
    });

    const passwordValidator = () => {
        validate()
    };

    f.password.addEventListener('change', passwordValidator);
    f.confirm_password.addEventListener('keyup', passwordValidator);
})();`)
//line tpl/register.qtpl:54
	qw422016.N().S(`</script>
`)
//line tpl/register.qtpl:55
}

//line tpl/register.qtpl:55
func (p *RegisterPage) WriteJS(qq422016 qtio422016.Writer) {
//line tpl/register.qtpl:55
	qw422016 := qt422016.AcquireWriter(qq422016)
//line tpl/register.qtpl:55
	p.StreamJS(qw422016)
//line tpl/register.qtpl:55
	qt422016.ReleaseWriter(qw422016)
//line tpl/register.qtpl:55
}

//line tpl/register.qtpl:55
func (p *RegisterPage) JS() string {
//line tpl/register.qtpl:55
	qb422016 := qt422016.AcquireByteBuffer()
//line tpl/register.qtpl:55
	p.WriteJS(qb422016)
//line tpl/register.qtpl:55
	qs422016 := string(qb422016.B)
//line tpl/register.qtpl:55
	qt422016.ReleaseByteBuffer(qb422016)
//line tpl/register.qtpl:55
	return qs422016
//line tpl/register.qtpl:55
}

//line tpl/register.qtpl:57
func (p *RegisterPage) StreamCSS(qw422016 *qt422016.Writer) {
//line tpl/register.qtpl:57
	qw422016.N().S(`
<style>`)
//line tpl/register.qtpl:58
	qw422016.N().S(`/*input:invalid:required {*/
    /*box-shadow: 0 0 4px #ff0000;*/
/*}*/
`)
//line tpl/register.qtpl:58
	qw422016.N().S(`</style>
`)
//line tpl/register.qtpl:59
}

//line tpl/register.qtpl:59
func (p *RegisterPage) WriteCSS(qq422016 qtio422016.Writer) {
//line tpl/register.qtpl:59
	qw422016 := qt422016.AcquireWriter(qq422016)
//line tpl/register.qtpl:59
	p.StreamCSS(qw422016)
//line tpl/register.qtpl:59
	qt422016.ReleaseWriter(qw422016)
//line tpl/register.qtpl:59
}

//line tpl/register.qtpl:59
func (p *RegisterPage) CSS() string {
//line tpl/register.qtpl:59
	qb422016 := qt422016.AcquireByteBuffer()
//line tpl/register.qtpl:59
	p.WriteCSS(qb422016)
//line tpl/register.qtpl:59
	qs422016 := string(qb422016.B)
//line tpl/register.qtpl:59
	qt422016.ReleaseByteBuffer(qb422016)
//line tpl/register.qtpl:59
	return qs422016
//line tpl/register.qtpl:59
}
